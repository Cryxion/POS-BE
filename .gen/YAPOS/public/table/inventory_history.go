//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var InventoryHistory = newInventoryHistoryTable("public", "inventory_history", "")

type inventoryHistoryTable struct {
	postgres.Table

	// Columns
	InventoryHistoryID postgres.ColumnInteger
	ItemID             postgres.ColumnInteger
	ShopID             postgres.ColumnInteger
	ItemName           postgres.ColumnString
	ItemDescription    postgres.ColumnString
	Quantity           postgres.ColumnInteger
	MinimumQuantity    postgres.ColumnInteger
	IsCount            postgres.ColumnBool
	IsObsolete         postgres.ColumnBool
	CreatedAt          postgres.ColumnTimez
	UpdatedAt          postgres.ColumnTimez
	ActualPrice        postgres.ColumnString
	DiscountedPrice    postgres.ColumnString
	CostPrice          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InventoryHistoryTable struct {
	inventoryHistoryTable

	EXCLUDED inventoryHistoryTable
}

// AS creates new InventoryHistoryTable with assigned alias
func (a InventoryHistoryTable) AS(alias string) *InventoryHistoryTable {
	return newInventoryHistoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InventoryHistoryTable with assigned schema name
func (a InventoryHistoryTable) FromSchema(schemaName string) *InventoryHistoryTable {
	return newInventoryHistoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InventoryHistoryTable with assigned table prefix
func (a InventoryHistoryTable) WithPrefix(prefix string) *InventoryHistoryTable {
	return newInventoryHistoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InventoryHistoryTable with assigned table suffix
func (a InventoryHistoryTable) WithSuffix(suffix string) *InventoryHistoryTable {
	return newInventoryHistoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInventoryHistoryTable(schemaName, tableName, alias string) *InventoryHistoryTable {
	return &InventoryHistoryTable{
		inventoryHistoryTable: newInventoryHistoryTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newInventoryHistoryTableImpl("", "excluded", ""),
	}
}

func newInventoryHistoryTableImpl(schemaName, tableName, alias string) inventoryHistoryTable {
	var (
		InventoryHistoryIDColumn = postgres.IntegerColumn("inventory_history_id")
		ItemIDColumn             = postgres.IntegerColumn("item_id")
		ShopIDColumn             = postgres.IntegerColumn("shop_id")
		ItemNameColumn           = postgres.StringColumn("item_name")
		ItemDescriptionColumn    = postgres.StringColumn("item_description")
		QuantityColumn           = postgres.IntegerColumn("quantity")
		MinimumQuantityColumn    = postgres.IntegerColumn("minimum_quantity")
		IsCountColumn            = postgres.BoolColumn("isCount")
		IsObsoleteColumn         = postgres.BoolColumn("isObsolete")
		CreatedAtColumn          = postgres.TimezColumn("created_at")
		UpdatedAtColumn          = postgres.TimezColumn("updated_at")
		ActualPriceColumn        = postgres.StringColumn("actual_price")
		DiscountedPriceColumn    = postgres.StringColumn("discounted_price")
		CostPriceColumn          = postgres.StringColumn("cost_price")
		allColumns               = postgres.ColumnList{InventoryHistoryIDColumn, ItemIDColumn, ShopIDColumn, ItemNameColumn, ItemDescriptionColumn, QuantityColumn, MinimumQuantityColumn, IsCountColumn, IsObsoleteColumn, CreatedAtColumn, UpdatedAtColumn, ActualPriceColumn, DiscountedPriceColumn, CostPriceColumn}
		mutableColumns           = postgres.ColumnList{ItemIDColumn, ShopIDColumn, ItemNameColumn, ItemDescriptionColumn, QuantityColumn, MinimumQuantityColumn, IsCountColumn, IsObsoleteColumn, CreatedAtColumn, UpdatedAtColumn, ActualPriceColumn, DiscountedPriceColumn, CostPriceColumn}
	)

	return inventoryHistoryTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InventoryHistoryID: InventoryHistoryIDColumn,
		ItemID:             ItemIDColumn,
		ShopID:             ShopIDColumn,
		ItemName:           ItemNameColumn,
		ItemDescription:    ItemDescriptionColumn,
		Quantity:           QuantityColumn,
		MinimumQuantity:    MinimumQuantityColumn,
		IsCount:            IsCountColumn,
		IsObsolete:         IsObsoleteColumn,
		CreatedAt:          CreatedAtColumn,
		UpdatedAt:          UpdatedAtColumn,
		ActualPrice:        ActualPriceColumn,
		DiscountedPrice:    DiscountedPriceColumn,
		CostPrice:          CostPriceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
